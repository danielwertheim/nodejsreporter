var config = require('./config'),    fs = require('fs'),    handlebars = require('handlebars');var Report = function (issues) {    var now = new Date(),        mappedIssues = [],        l = issues.length;    for(var i = 0; i < l; i++) {        mappedIssues.push(new Issue(issues[i]));    }    return {        createdISO: now.toISOString(),        createdFriendly: now.toLocaleString(),        issues: mappedIssues    };};var Issue = function (raw) {    var l = raw.fields.length,        issue = {            id: raw.id        };    for(var i = 0; i < l; i++) {        issue[raw.fields[i].name.toLowerCase().replace(' ', '')] = raw.fields[i].value;    }    return issue;};exports.generate = function (json) {    var report = new Report(JSON.parse(json));        rs.readFile(config.paths.resources + 'report-template.html', config.encoding, function (err, htmlTemplate) {        var template = handlebars.compile(htmlTemplate);        var html = template(report);                fs.writeFile(config.paths.output + 'report-.html', html, config.encoding);        fs.createReadStream(config.paths.resources + 'report-styling.css').pipe(fs.createWriteSream(config.paths.output + 'report-styling.css'));    });};